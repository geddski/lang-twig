// Test grammar for nested mixed languages

@top Template { (directive | Text)* }

directive {
  Insert |
  Conditional { ConditionalOpen (directive | Text)* ConditionalClose } |
  Style { StyleOpen (directive | Text)* StyleClose }
}

@skip {space} {
  Insert { "{{" DirectiveContent "}}" }
  StyleOpen[closedBy=StyleClose] { "{%" kw<"style"> StyleContent "%}" }
  StyleClose[openedBy=StyleOpen] { "{%" kw<"endstyle"> "%}" }
  ConditionalOpen[closedBy=ConditionalClose] { "{%" kw<"if"> DirectiveContent "%}" }
  ConditionalClose[openedBy=ConditionalOpen] { "{%" kw<"endif"> "%}" }
}

Comment {
  "{% comment %}"
  commentContent*
  "{% endcomment %}"
}

kw<word> { @specialize[@name={word}]<Identifier, word> }

@external tokens commentContent from "./tokens.js" { commentContent }

@tokens {
  Identifier { @asciiLetter+ }
  Text { ![{] Text? | "{" (@eof | ![%{] Text?) }
  space { @whitespace+ }
  DirectiveContent { ![%}] DirectiveContent? | $[%}] (@eof | ![}] DirectiveContent?) }
  StyleContent { ![%}] StyleContent? | $[%}] (@eof | ![}] StyleContent?) }
  @precedence { space DirectiveContent StyleContent}
  "{{" "}}" "{%" "%}"
}

@detectDelim
@skip {
  Comment
}
@external propSource twigHighlight from "./highlight.js"
